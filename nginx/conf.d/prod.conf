# Production environment configuration
upstream app_prod {
    server app-prod:3000 max_fails=3 fail_timeout=30s;
}

upstream minio_api {
    server minio:9000 max_fails=3 fail_timeout=30s;
}

upstream minio_console {
    server minio:9001 max_fails=3 fail_timeout=30s;
}

# Health check server for internal monitoring
server {
    listen 8080;
    server_name localhost;
    
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Service health checks
    location /health/app {
        proxy_pass http://app_prod/api/health/status;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        access_log off;
    }
    
    location /health/minio {
        proxy_pass http://minio_api/minio/health/live;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        access_log off;
    }
}

# Main application server
server {
    listen 80;
    server_name localhost;
    
    # Enhanced security headers for production
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
    
    location = /api/health/status {
        access_log off;
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /api/health/database {
        access_log off;
        proxy_pass http://app_dev;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Handle Next.js image optimization requests
    location /_next/image {
        access_log off;
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
    }

    # CONSOLIDATED: Handle all static assets with aggressive caching
    location ~* \.(?:css|js|ico|gif|jpe?g|png|svg|webp|woff2?|txt)$ {
        access_log off;
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
    }
    
    # API routes with enhanced rate limiting
    location /api/ {
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Stricter rate limiting for API
        limit_req zone=api burst=10 nodelay;
    }
    
    # Authentication routes with very strict rate limiting
    location /api/auth/ {
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Very strict rate limiting for auth
        limit_req zone=auth burst=5 nodelay;
    }
    
    # Main application routes (catch-all)
    location / {
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        
        # Rate limiting for general requests
        limit_req zone=api burst=20 nodelay;
    }
}


# MinIO S3 API server
server {
    listen 9000;
    server_name localhost;
    
    # Security headers for MinIO
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    location / {
        proxy_pass http://minio_api;
        
        # Set proper host header for MinIO
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Forward all headers that might be needed for S3/MinIO operations
        proxy_pass_request_headers on;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Content-Type $content_type;
        proxy_set_header Content-Length $content_length;
        
        # S3/MinIO specific headers that must be preserved
        proxy_set_header x-amz-content-sha256 $http_x_amz_content_sha256;
        proxy_set_header x-amz-date $http_x_amz_date;
        proxy_set_header x-amz-security-token $http_x_amz_security_token;
        proxy_set_header x-amz-checksum-crc32 $http_x_amz_checksum_crc32;
        proxy_set_header x-amz-meta-original-filename $http_x_amz_meta_original_filename;
        proxy_set_header x-amz-meta-upload-timestamp $http_x_amz_meta_upload_timestamp;
        proxy_set_header x-amz-sdk-checksum-algorithm $http_x_amz_sdk_checksum_algorithm;
        
        # Preserve query strings for S3 signature validation
        proxy_pass_request_body on;
        
        # CORS is handled by MinIO directly - no nginx CORS headers needed
        
        # Upload rate limiting
        limit_req zone=uploads burst=30;
        
        # Large file upload support and S3 compatibility
        client_max_body_size 50M;
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 60s;
    }
}

# MinIO Console server  
server {
    listen 9001;
    server_name localhost;
    
    # Security headers for MinIO Console
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    location / {
        proxy_pass http://minio_console;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for console access
        limit_req zone=api burst=10 nodelay;
    }
}