# This is an example file. Copy this to .env.local for development
# and .env.production for deployment. NEVER commit your .env files to Git.

# ⚠️  SECURITY WARNING: Change ALL default values before deployment!
# The application will check for default values and fail in production.

# --- NextAuth Configuration ---
# Generate a secret with: openssl rand -base64 32
# ⚠️  CRITICAL: Change this from the default value!
AUTH_SECRET="your-super-secret-for-auth"
AUTH_URL="http://localhost:3000" # Change for production - use HTTPS!

# --- Database Configuration ---
# For Prisma, DATABASE_URL is used by your app for queries (via connection pool).
# DIRECT_URL is used ONLY for migrations.
# In our Docker setup without a separate pooler, these two will be the same.
DATABASE_URL="postgresql://myuser:mypassword@db:5432/college_connect"
DIRECT_URL="postgresql://myuser:mypassword@db:5432/college_connect"

# For local development OUTSIDE of Docker, you would change the host to 'localhost':
# DATABASE_URL="postgresql://myuser:mypassword@localhost:5432/college_connect"
# DIRECT_URL="postgresql://myuser:mypassword@localhost:5432/college_connect"

# --- Google OAuth (Optional) ---
# Required only if you want to enable Google sign-in
# GOOGLE_CLIENT_ID="your-google-client-id"
# GOOGLE_CLIENT_SECRET="your-google-client-secret"

# --- MinIO S3-Compatible Storage ---
# ⚠️  SECURITY WARNING: Change these default MinIO credentials!
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
NEXT_PUBLIC_MINIO_BUCKET=college-connect
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin
AWS_REGION=us-east-1 # This can be any value for MinIO

# Internal URL for backend service-to-service communication inside Docker
MINIO_ENDPOINT="http://minio:9000"
# Public-facing URL for the browser to access MinIO
NEXT_PUBLIC_MINIO_ENDPOINT="http://localhost:9000"

# --- Application Configuration ---
NEXT_PUBLIC_API_URL="/api"

# --- Security Notes ---
# 1. Never use default passwords in production
# 2. Use HTTPS URLs in production (AUTH_URL, MINIO_ENDPOINT)
# 3. Keep environment files secure and never commit them
# 4. Use strong, unique passwords for all services
# 5. Regularly rotate secrets and credentials
# 6. Consider using a secrets management service for production
